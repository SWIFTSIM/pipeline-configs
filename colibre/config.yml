# Example configuration file for a COLIBRE-like simulation
# Location of your other .yml files that are passed to the
# velociraptor auto plotter (these describe your scaling)
# relation figures. Also required is the registration file
# in the case where you have non-catalogue properties
# used in the autoplotter.
auto_plotter_directory: auto_plotter
auto_plotter_registration: registration.py

# Location of the 'observational data' repository and its compiled
# contents.
observational_data_directory: ../observational_data

# Style sheet to be used throughout with plotting
matplotlib_stylesheet: mnras.mplstyle

# Jinja2 template that gets fed the swiftsimio metadata
# object for you to describe the run with.
description_template: description.html

# Location and description of additional figures
scripts:
  - filename: scripts/density_temperature.py
    caption: Density-temperature diagram. If present, dashed line represents the entropy floor (equation of state).
    output_file: density_temperature.png
    section: Density-Temperature
    title: Density-Temperature
  - filename: scripts/density_temperature_sf_fraction.py
    caption: Density-temperature diagram shaded by the mass fraction of the gas whose instantaneous star formation rate is greater than zero.
    output_file: density_temperature_sf_fraction.png
    section: Density-Temperature
    title: Density-Temperature (Star Forming Gas)
  - filename: scripts/density_temperature_metals.py
    caption: Density-temperature diagram with the pixel value weighted by the mean logarithmic metal mass fraction (absolute) in that bin. Medians are not used due to their computational complexity. If present, dashed line represents the entropy floor (equation of state).
    output_file: density_temperature_metals.png
    section: Density-Temperature
    title: Density-Temperature (Metals)
  - filename: scripts/density_temperature_dust.py
    caption: Density-temperature diagram with the pixel value weighted by the mean logarithmic dust mass fraction in that bin. Medians are not used due to their computational complexity.
    output_file: density_temperature_dust.png
    section: Density-Temperature
    title: Density-Temperature (Dust)
  - filename: scripts/density_temperature_dust_to_metals.py
    caption: Density-temperature diagram with the pixel value the ratio of dust to metals for the particles within that bin (i.e. the values are binned weighted by dust, then by metals, and those two grids are divided to produce the dust to metals ratio). Only particles with a metal mass fraction of $Z > 10^{-8}$ are plotted.
    output_file: density_temperature_dust_to_metals.png
    section: Density-Temperature
    title: Density-Temperature (Dust / Metals)
  - filename: scripts/density_temperature_dust2metal.py
    caption: Density-temperature diagram shaded by the total fraction of metals in the dust phase.
    output_file: density_temperature_dust2metal.png
    section: Density-Temperature
    title: Dust-to-metal Ratio
    additional_arguments:
      quantity_type: hydro
  - filename: scripts/density_internal_energy.py
    caption: Density-Internal Energy diagram. If present, dashed line represents the entropy floor (equation of state).
    output_file: density_internal_energy.png
    section: Density-Temperature
    title: Density-Internal Energy
  - filename: scripts/density_pressure.py
    caption: Density-pressure diagram. If present, dashed line represents the entropy floor (equation of state).
    output_file: density_pressure.png
    section: Density-Temperature
    title: Density-Pressure
  - filename: scripts/median_temperature_density.py
    caption: Median temperature as a function of density for all gas and for gas in selected metallicity ranges.
    output_file: median_temperature_density.png
    section: Density-Temperature
    title: Density-Median Temperature
  - filename: scripts/star_formation_history.py
    caption: Star formation density history plotted directly from the SFR.txt file produced by SWIFT.
    output_file: star_formation_history.png
    section: Star Formation Density History
    title: Star Formation History
  - filename: scripts/stellar_mass_evolution.py
    caption: Evolution of the stellar mass density plotted directly from the statistics.txt file produced by SWIFT.
    output_file: stellar_mass_evolution.png
    section: Star Formation History
    title: Stellar Mass Density Evolution
  - filename: scripts/HI_mass_evolution.py
    caption: Evolution of the atomic gas mass abundance plotted directly from the statistics.txt file produced by SWIFT, compared with assorted observational estimates corrected to our cosmology. The simulation data is corrected for Helium by multiplying it by 1/0.76.
    output_file: HI_mass_evolution.png
    section: Cold Gas Evolution
    title: Atomic Gas Mass Evolution
  - filename: scripts/H2_mass_evolution.py
    caption: Evolution of the molecular gas mass abundance plotted directly from the statistics.txt file produced by SWIFT, compared with assorted observational estimates.
    output_file: H2_mass_evolution.png
    section: Cold Gas Evolution
    title: Molecular Gas Mass Evolution
  - filename: scripts/metallicity_distribution.py
    caption: Metal mass fraction distribution shown for each simulation; solid lines show gas metallicity and dashed lines show the same for the stars. If present, dashed line represents the entropy floor (equation of state). The percentages in between brackets indicate what fraction of the particles is above the lower limit and hence included in the distribution.
    output_file: metallicity_distribution.png
    section: Metal Mass Fractions
    title: Metal Mass Fraction Distribution
  - filename: scripts/birth_density_distribution.py
    caption: Distributions of stellar birth densities, split by redshift. The y axis shows the number of stars per bin divided by the bin width and by the total number of stars. The dashed vertical lines show the median stellar birth-densities, while the dotted lines indicade the critical density from C. Dalla Vecchia & J. Schaye (2012) for SN min and max heating temperatures with $f_t=10$.
    title: Stellar Birth Densities
    section: Stellar Birth Properties
    output_file: birth_density_distribution.png
  - filename: scripts/birth_pressure_distribution.py
    caption: Distributions of stellar birth pressures, split by redshift. The y axis shows the number of stars per bin divided by the bin width and by the total number of stars. The dashed vertical lines show the median stellar birth-pressures.
    title: Stellar Birth Pressures
    section: Stellar Birth Properties
    output_file: birth_pressure_distribution.png
  - filename: scripts/snii_energy_fraction_distribution.py
    caption: Distributions of SNII energy fractions, split by redshift. The y axis shows the number of stars per bin divided by the bin width and by the total number of stars. The dashed vertical lines show the median SNII energy fraction in three different redshift intervals. The dotted vertical line shows the average SNII energy fraction computed over all star particles in the simulation.
    title: SNII Energy Fraction
    section: Stellar Birth Properties
    output_file: snii_energy_fraction_distribution.png
  - filename: scripts/birth_temperature_distribution.py
    caption: Distributions of stellar birth temperatures, split by redshift. The y axis shows the number of stars per bin divided by the bin width and by the total number of stars. The dashed vertical lines show the median stellar birth-temperatures.
    title: Stellar Birth Temperatures
    section: Stellar Birth Properties
    output_file: birth_temperature_distribution.png
  - filename: scripts/birth_velocity_dispersion_distribution.py
    caption: Distributions of stellar birth velocity dispersions, split by redshift. The y axis shows the number of stars per bin divided by the bin width and by the total number of stars. The dashed vertical lines show the median stellar birth velocity dispersions.
    title: Stellar Birth Velocity Dispersions
    section: Stellar Birth Properties
    output_file: birth_velocity_dispersion_distribution.png
  - filename: scripts/birth_density_metallicity.py
    caption: Stellar birth densities vs metallicity diagram. The pixel colour indicates the number of stellar particles in the pixel. At a given birth density, particles with metallicities lower than the smallest value along the Y axis are placed in the lowest-metallicity bin.
    title: Stellar Birth Densities-Metallicity
    section: Stellar Birth Properties
    output_file: birth_density_metallicity.png
  - filename: scripts/birth_density_redshift.py
    caption: Stellar birth densities vs birth redshift diagram. The pixel colour indicates the number of stellar particles in the pixel.
    title: Stellar Birth Densities-Birth Redshift
    section: Stellar Birth Properties
    output_file: birth_density_redshift.png
  - filename: scripts/birth_metallicity_redshift.py
    caption: Stellar metallicity vs birth redshift diagram. The pixel colour indicates the number of stellar particles in the pixel. At a given birth redshift, particles with metallicities lower than the smallest value along the X axis are placed in the lowest-metallicity bin.
    title: Stellar Metallicity-Birth Redshift
    section: Stellar Birth Properties
    output_file: metallicity_redshift.png
  - filename: scripts/birth_density_temperature.py
    caption: Stellar birth densities vs Stellar birth temperature diagram. The pixel colour indicates the number of stellar particles in the pixel.
    title: Stellar Birth Densities-Stellar Birth Temperatures
    section: Stellar Birth Properties
    output_file: birth_density_temperature.png
  - filename: scripts/last_SNII_density_distribution.py
    caption: Distributions of the gas densities recorded when the gas was last heated by SNII, split by redshift. The y axis shows the number of SNII-heated gas particles per bin divided by the bin width and by the total of SNII-heated gas particles. The dashed vertical lines show the median SNII gas-densities, while the dotted lines indicade the critical density from C. Dalla Vecchia & J. Schaye (2012) for SN min and max heating temperatures with $f_t=10$.
    title: Density of the gas heated by SNII
    section: Feedback Densities
    output_file: SNII_density_distribution.png
  - filename: scripts/last_AGN_density_distribution.py
    caption: Distributions of the gas densities recorded when the gas was last heated by AGN, split by redshift. The y axis shows the number of AGN-heated gas particles per bin divided by the bin width and by the total of AGN-heated gas particles. The dashed vertical lines show the median AGN gas-densities, while the dotted lines indicade the critical density from C. Dalla Vecchia & J. Schaye (2012) for AGN heating temperature with $f_t=10$.
    title: Density of the gas heated by AGN
    section: Feedback Densities
    output_file: AGN_density_distribution.png
  - filename: scripts/gas_metallicity_evolution.py
    caption: Evolution of the metal mass in gas per unit co-moving volume.
    output_file: gas_metallicity_evolution.png
    section: Metal Evolution
    title: Gas Phase Metal Mass Density Evolution
  - filename: scripts/star_metallicity_evolution.py
    caption: Evolution of the metal mass locked in stars per unit co-moving volume.
    output_file: star_metallicity_evolution.png
    section: Metal Evolution
    title: Metal Mass Locked in Stars Density Evolution
  - filename: scripts/bh_metallicity_evolution.py
    caption: Evolution of the metal mass locked in black holes per unit co-moving volume.
    output_file: bh_metallicity_evolution.png
    section: Metal Evolution
    title: Metal Mass Locked in Black Holes Density Evolution
  - filename: scripts/bh_accretion_evolution.py
    caption: Evolution of the accretion rate onto BHs per unit co-moving volume.
    output_file: bh_accretion_evolution.png
    section: Black Holes Evolution
    title: Black Hole Accretion History
  - filename: scripts/bh_mass_evolution.py
    caption: Evolution of the BH mass per unit co-moving volume.
    output_file: bh_mass_evolution.png
    section: Black Holes Evolution
    title: Black Hole Mass History
  - filename: scripts/bh_masses.py
    caption: Relation between black hole particle (dynamical) masses and subgrid masses. The vertical dashed lines shows the primordial gas particle mass and the horizontal dashed lines corresponds to the black hole seed mass.
    output_file: bh_masses.png
    section: Black Holes
    title: Black Hole Dynanmical and Subgrid Masses
  - filename: scripts/bh_eddington_fractions.py
    caption: The relation between black hole Eddington fraction and subgrid mass.
    output_file: black_hole_eddington_fractions.png
    section: Black Holes - Growth
    title: Black Hole Eddington Fraction - Mass Relation
  - filename: scripts/bh_merger_mass_fractions.py
    caption: The fraction of subgrid mass growth through mergers versus subgrid mass.
    output_file: black_hole_merger_mass_fractions.png
    section: Black Holes - Growth
    title: Black Hole Merger Mass Fractions - Mass Relation
  - filename: scripts/bh_luminosities.py
    caption: The (instantaneous and bolometric) AGN luminosity versus subgrid mass. Note that this does not include the coupling efficiency factor, i.e. this is not the thermal heating rate.
    output_file: black_hole_luminosities.png
    section: Black Holes - Radiation
    title: Black Hole Luminosity - Mass Relation
  - filename: scripts/bh_thermal_energies.py
    caption: The total AGN injected thermal energies (over the BH lifetime) versus subgrid mass.
    output_file: black_hole_thermal_energies.png
    section: Black Holes - Radiation
    title: Black Hole Thermal Energy - Mass Relation
  - filename: scripts/bh_bolometric_luminosity_functions.py
    caption: The AGN bolometric luminosity function calculated from the accretion rates and radiative efficiencies. The observational data is inferred from different bands using correction factors.
    output_file: AGN_bolometric_luminosity_function.png
    section: Black Holes - Radiation
    title: Black Hole AGN Bolometric Luminosity Function
  - filename: scripts/bh_thermal_heatings.py
    caption: The total number of particles heated by AGN thermal feedback (over the BH lifetime) versus subgrid mass.
    output_file: black_hole_thermal_heatings.png
    section: Black Holes - Radiation
    title: Black Hole AGN Heating Events - Mass Relation
  - filename: scripts/gas_masses.py
    caption: Gas Particle Masses with the threshold for splitting indicated by the vertical dashed line.
    output_file: gas_masses.png
    section: Histograms
    title: Gas Particle Masses
  - filename: scripts/gas_smoothing_lengths.py
    caption: Gas Particle Comoving Smoothing Lengths with the minimal smoothing length indicated by the vertical dashed line.
    output_file: gas_smoothing_lengths.png
    section: Histograms
    title: Gas Particle Smoothing Lengths
  - filename: scripts/gas_minimal_smoothing_lengths.py
    caption: Gas Particle Comoving Minimal Smoothing Lengths reached during the simulation, split by redshifts at which these minimal smoothing lengths were reached and normalised by the gravitational softening length (at the corresponding redshift). The minimal allowed ratio between smoothing length and gravitational softening length is indicated by the vertical dashed line. The normalisation by the softening includes the factor of 3 to convert from the Plummer-equivalent softening length, which is specified in the parameter file. The normalisation also accounts for the factor of $\gamma_{\rm kernel} \approx 2$, which relates the smoothing length to the extent of an SPH kernel.
    output_file: gas_minimal_smoothing_lengths.png
    section: Histograms
    title: Gas Particle Minimal Smoothing Lengths
  - filename: scripts/gas_minimal_smoothing_length_redshift.py
    caption: Gas Particle Comoving Minimal Smoothing Lengths versus Redshifts at which these minimal smoothing lengths were reached. The black dashed and black dotted curves indicate, respectively, the minimum allowed smoothing length and gravitational softening length at a given redshift.
    output_file: gas_hmin_redshift.png
    section: Histograms
    title: Gas Particle Minimal Smoothing Lengths vs. Redshift
  - filename: scripts/number_of_agn_thermal_injections.py
    caption: The cumulative number of black holes (summed from right to left) with a given total number of thermal energy injections (less than or equal to the number of particles heated) the black hole has had throughout the simulation.
    output_file: num_agn_thermal_injections.png
    section: Black Holes
    title: Cumulative number of AGN thermal injections
  - filename: scripts/max_temperatures.py
    caption: Maximal temperature recorded by gas particles throughout the entire simulation.
    output_file: gas_max_temperatures.png
    section: Maximal Temperatures
    title: Maximal Temperature reached by gas particles
  - filename: scripts/max_temperature_redshift.py
    caption: The maximal temperatures reached by all star and gas particles (density given by the colour map) against the redshift at which they were at that temperature.
    output_file: max_temperature_redshift.png
    section: Maximal Temperatures
    title: Maximal Temperature-Redshift
  - filename: scripts/particle_updates_step_cost.py
    caption: Wall-clock time to run a time-step as a function of the number of gas particles updated. The tracks at the top correspond to steps where the tree is rebuilt, i/o is performed, FoF is run or other non-regular operations are done.
    title: Wall-clock time per gas particle updates.
    section: Run Performance
    output_file: particle_updates_step_cost.png
  - filename: scripts/wallclock_simulation_time.py
    caption: The cosmic time as a function of the wall-clock time.
    title: Cosmic time vs. wall-clock time
    section: Run Performance
    output_file: wallclock_simulation_time.png
  - filename: scripts/wallclock_number_of_steps.py
    caption: The cumulative number of the simulation time-steps as a function of the wall-clock time.
    title: The number of steps vs. wall-clock time
    section: Run Performance
    output_file: wallclock_number_of_steps.png
  - filename: scripts/simulation_time_number_of_steps.py
    caption: The cumulative number of the simulation time-steps as a function of the cosmic time.
    title: Number of steps vs. cosmic time
    section: Run Performance
    output_file: simulation_time_number_of_steps.png
  - filename: scripts/wallclock_timebin_hist.py
    caption: Total wall-clock time spent in each of the different simulation time-bins.
    title: Wall-clock time per time-bin
    section: Run Performance
    output_file: wallclock_timebin_hist.png
  - filename: scripts/bh_timestep_hist.py
    caption: Distributions of black-hole time-steps. The solid curve shows BH current time-steps. The dashed curve shows BH minimal time-steps reached during the simulation. The dotted curve shows accretion-limited time-steps of BHs. The dash-dotted and dashed vertical lines indicate, respectively, the BH minimum allowed time-step based on accretion rate and the age of the Universe.
    title: Black-hole time-steps histogram
    section: Run Performance
    output_file: bh_timestep_hist.png
  - filename: scripts/deadtime_timebin_hist.py
    caption: Dead time fraction in each simulation time-bin.
    title: Deadtime fraction per time-bin
    section: Run Performance
    output_file: deadtime_timebin_hist.png
  - filename: scripts/stepsize_deadtime.py
    caption: Dead time fraction as a function of number of updates per rank.
    title: Step size vs deadtime fraction
    section: Run Performance
    output_file: stepsize_deadtime.png
  - filename: scripts/deadtime_evolution.py
    caption: Evolution of the dead time fraction as a function of scale factor. The dashed line represents the average dead time over the entire run.
    title: Dead time fraction vs scale factor
    section: Run Performance
    output_file: deadtime_evolution.png
  - filename: scripts/density_temperature_species.py
    caption: Density-temperature diagram shaded by H$_2$ mass fraction. The fraction is computed as the H$_2$ mass contained in each cell over the mass of gas in that cell.
    output_file: subgrid_density_temperature_H2.png
    section: Hydrogen Phase Density-Temperature
    title: H$_2$
    additional_arguments:
      hydrogen_species: H2
      quantity_type: subgrid
  - filename: scripts/density_temperature_species.py
    caption: Density-temperature diagram shaded by HI mass fraction. The fraction is computed as the HI mass contained in each cell over the mass of gas in that cell.
    output_file: subgrid_density_temperature_HI.png
    section: Hydrogen Phase Density-Temperature
    title: HI
    additional_arguments:
      hydrogen_species: HI
      quantity_type: subgrid
  - filename: scripts/density_temperature_species.py
    caption: Density-temperature diagram shaded by HII mass fraction. The fraction is computed as the HII mass contained in each cell over the mass of gas in that cell.
    output_file: subgrid_density_temperature_HII.png
    section: Hydrogen Phase Density-Temperature
    title: HII
    additional_arguments:
      hydrogen_species: HII
      quantity_type: subgrid
  - filename: scripts/density_species_interp.py
    caption: Co-plot of species fractions (left y-axis) and the dust-to-metal ratio (right y-axis) as a function opf gas density. If available, solid green line shows explicitly modelled dust-to-metal ratio, while dashed green is interpolated from the Ploeckinger+20 tables.
    output_file: density_vs_species_fraction.png
    section: Hydrogen Phases
    title: Hydrogen Phase Fractions
    additional_arguments:
      cooling_tables: /cosma7/data/dp004/wmfw23/colibre_dust/coolingtables/UV_dust1_CR1_G1_shield1.hdf5
      quantity_type: hydro
  - filename: scripts/density_species_depletions.py
    caption: Co-plot of species fractions (left y-axis) and the dust-to-metal ratio (right y-axis) as a function of gas density. If available, solid green line shows explicitly modelled dust-to-metal ratio, while dashed green is interpolated from the Ploeckinger+20 tables.
    output_file: density_vs_species_fraction_depletions.png
    section: Hydrogen Phases
    title: Hydrogen Phase Fractions (Depletion Fraction)
    additional_arguments:
      quantity_type: hydro
  - filename: scripts/density_species_diffuse.py
    caption: Co-plot of species fractions (left y-axis) and the dust-to-metal ratio (right y-axis) as a function of gas density. If available, solid green line shows explicitly modelled dust-to-metal ratio, while dashed green is interpolated from the Ploeckinger+20 tables.
    output_file: density_vs_species_fraction_diffuse.png
    section: Hydrogen Phases
    title: Hydrogen Phase Fractions (Diffuse Fraction)
    additional_arguments:
      quantity_type: hydro
  - filename: scripts/last_SNII_kick_velocity_distribution.py
    caption: Distributions of SNII kick velocities experienced by the gas recorded when the gas was last kicked by SNII, split by redshift. The y axis shows the number of SNII-kicked gas particles per bin divided by the bin width and by the total of SNII-kicked gas particles. The dashed vertical lines show the median kick velocitites, while the dotted lines indicade the target kick velocity.
    output_file: SNII_last_kick_velocity_distribution.png
    section: Feedback kick velocities
    title: Kick velocity distribution at last SNII
  - filename: scripts/max_SNII_kick_velocities.py
    caption: Maximal SNII kick velocities by experienced by particles in SNII kinetic feedback throughout the entire simulation.
    output_file: SNII_maximal_kick_velocities.png
    section: Feedback kick velocities
    title: Maximal SNII kick velocity
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [C/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [C/H]Sun = 8.43. The median [C/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_CFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [C/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: C_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [C/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [C/H]Sun = 8.43. The median [C/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_CFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [C/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: C_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [C/O] using Asplund et al. (2009) values for [O/H]Sun = 8.69 and [C/H]Sun = 8.43. The median [C/O] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_CO_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [C/O]'
    additional_arguments:
      xvar: Fe_H
      yvar: C_O
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[O/H] vs [C/O] using Asplund et al. (2009) values for [O/H]Sun = 8.69 and [C/H]Sun = 8.43. The median [C/O] vs median [O/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_OH_CO_APOGEE.png
    section: Stellar Metal Abundances
    title: '[O/H] vs [C/O]'
    additional_arguments:
      xvar: O_H
      yvar: C_O
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [N/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [N/H]Sun = 7.83. The median [N/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_NFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [N/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: N_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[O/H] vs [N/O] using Asplund et al. (2009) values for [O/H]Sun = 8.69 and [N/H]Sun = 7.83. The median [N/O] vs median [O/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_OH_NO_APOGEE.png
    section: Stellar Metal Abundances
    title: '[O/H] vs [N/O]'
    additional_arguments:
      xvar: O_H
      yvar: N_O
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [N/O] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5, [N/H]Sun = 7.83 and [O/H]Sun = 8.69. The median [N/O] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_NO_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [N/O]'
    additional_arguments:
      xvar: Fe_H
      yvar: N_O
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [O/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [O/H]Sun = 8.69. The median [O/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_OFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [O/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: O_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [O/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [O/H]Sun = 8.69. The median [O/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_OFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [O/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: O_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [O/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [O/H]Sun = 8.69. The median [O/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the works of Mishenina+99, Israelian+98, Cayrel+04, Bai+04, Zhang+05, Koch+08. Most of these works assume Grevesser & Anders (1989) values for solar metallicity, their were corrected  to Asplund+09. Additional data includes Fornax (Letarte+07), Carina (Kock+05), Sculptor (Geisler+05) and  Sagittarious (Sbordone+07).'
    output_file: stellar_abundances_FeH_OFe.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [O/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: O_Fe
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Ne/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Ne/H]Sun = 7.93. The median [Ne/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles.'
    output_file: stellar_abundances_FeH_NeFe.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Ne/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Ne_Fe
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Mg/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Mg/H]Sun = 7.6. The median [Mg/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_MgFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Mg/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Mg_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Mg/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Mg/H]Sun = 7.6. The median [Mg/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_FeH_MgFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Mg/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Mg_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Mg/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Mg/H]Sun = 7.6. The median [Mg/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW, Carina, Fornax, Sculptor and Sagittarious corresponds to a data compilation presented by Tolstoy, Hill & Tosi (2009) and extracted by Rob Crain. Note solar metallicity of Grevesser & Anders (1989) was corrected to Asplund+09.'
    output_file: stellar_abundances_FeH_MgFe.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Mg/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Mg_Fe
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Si/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Si/H]Sun = 7.51. The median [Si/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_SiFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Si/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Si_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Sr/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Sr/H]Sun = 2.87. The median [Sr/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles.'
    output_file: stellar_abundances_FeH_SrFe.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Sr/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Sr_Fe
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Ba/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Ba/H]Sun = 2.18. The median [Ba/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_BaFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Ba/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Ba_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[Fe/H] vs [Eu/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [Eu/H]Sun = 0.52. The median [Eu/Fe] vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the GALAH survey (Buder et al. 2021). Contours use a log scale with 0.04 bin size and a minimum star count of 10. All recommended flags are applied to GALAH data to select stars (SN, FE/H and X/Fe quality flags).'
    output_file: stellar_abundances_FeH_EuFe_GALAH.png
    section: Stellar Metal Abundances
    title: '[Fe/H] vs [Eu/Fe]'
    additional_arguments:
      xvar: Fe_H
      yvar: Eu_Fe
      dataset: GALAH
  - filename: scripts/stellar_abundances.py
    caption: '[O/H] vs [O/Fe] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5 and [O/H]Sun = 8.69. The median [O/Fe] vs median [O/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_OH_OFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[O/H] vs [O/Fe]'
    additional_arguments:
      xvar: O_H
      yvar: O_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: '[O/H] vs [Mg/Fe] using Asplund et al. (2009) values for [O/H]Sun = 8.69 and [Mg/H]Sun = 7.6. The median [Mg/Fe] vs median [O/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles. The observational data for MW compiles the data from the APOGEE survey (Holtzman et al. 2018) and AstroNN added-value catalog (Leung, H.W. & Bovy, Jo 2019b). We create 6 stellar distributions by selecting stars from APOGEE based on galactocentric radial & azimuthal cuts, and combine them in order to derive a joint stellar abundance distribution that gives less weight to stars in the solar vicinity. The resulting contours use a log scale with 0.2 bin size.'
    output_file: stellar_abundances_OH_MgFe_APOGEE.png
    section: Stellar Metal Abundances
    title: '[O/H] vs [Mg/Fe]'
    additional_arguments:
      xvar: O_H
      yvar: Mg_Fe
      dataset: APOGEE
  - filename: scripts/stellar_abundances.py
    caption: 'The mass fraction of Fe from SNIa vs [Fe/H] using Asplund et al. (2009) values for [Fe/H]Sun = 7.5. The median SNIa Fe fraction vs median [Fe/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles.'
    output_file: stellar_abundances_FeH_Fe_snia_fraction.png
    section: Stellar Metal Abundances
    title: 'Fraction of Fe from SNIa vs [Fe/H]'
    additional_arguments:
      xvar: Fe_H
      yvar: Fe_SNIa_fraction
  - filename: scripts/stellar_abundances.py
    caption: 'The mass fraction of Fe from SNIa vs [O/H] using Asplund et al. (2009) values for [O/H]Sun = 8.69. The median SNIa Fe fraction vs median [O/H] is indicated by the solid curve(s). The scatter points show abundances of individual stellar particles.'
    output_file: stellar_abundances_OH_Fe_snia_fraction.png
    section: Stellar Metal Abundances
    title: 'Fraction of Fe from SNIa vs [O/H]'
    additional_arguments:
      xvar: O_H
      yvar: Fe_SNIa_fraction
  - filename: scripts/column_density_distribution_function.py
    title:
      - HI Column Density Distribution Function (full box, full range)
      - HI Column Density Distribution Function (half box, full range)
      - HI Column Density Distribution Function (full box, reduced range)
      - HI Column Density Distribution Function (half box, reduced range)
    caption:
      - 'The column density distribution function of neutral hydrogen computed by projecting the entire box along the z-axis, corrected for the size of the box in redshift space.'
      - 'The column density distribution function of neutral hydrogen computed by splitting the box in half along the z-axis and projecting each half separately, also along the z-axis. Corrected for the size of the box in redshift space.'
      - 'The column density distribution function of neutral hydrogen computed by projecting the entire box along the z-axis, corrected for the size of the box in redshift space.'
      - 'The column density distribution function of neutral hydrogen computed by splitting the box in half along the z-axis and projecting each half separately, also along the z-axis. Corrected for the size of the box in redshift space.'
    output_file:
      - column_density_distribution_function_chunk1_full_range_HI.png
      - column_density_distribution_function_chunk2_full_range_HI.png
      - column_density_distribution_function_chunk1_reduced_range_HI.png
      - column_density_distribution_function_chunk2_reduced_range_HI.png
    section: Column Densities
    additional_arguments:
      element: hydrogen
      species: HI
      parallel: True
  - filename: scripts/column_density_distribution_function.py
    title:
      - HeII Column Density Distribution Function (full box, full range)
      - HeII Column Density Distribution Function (half box, full range)
      - HeII Column Density Distribution Function (full box, reduced range)
      - HeII Column Density Distribution Function (half box, reduced range)
    caption:
      - 'The column density distribution function of singly-ionized helium computed by projecting the entire box along the z-axis, corrected for the size of the box in redshift space.'
      - 'The column density distribution function of singly-ionized helium computed by splitting the box in half along the z-axis and projecting each half separately, also along the z-axis. Corrected for the size of the box in redshift space.'
      - 'The column density distribution function of singly-ionized helium computed by projecting the entire box along the z-axis, corrected for the size of the box in redshift space.'
      - 'The column density distribution function of singly-ionized helium computed by splitting the box in half along the z-axis and projecting each half separately, also along the z-axis. Corrected for the size of the box in redshift space.'
    output_file:
      - column_density_distribution_function_chunk1_full_range_HeII.png
      - column_density_distribution_function_chunk2_full_range_HeII.png
      - column_density_distribution_function_chunk1_reduced_range_HeII.png
      - column_density_distribution_function_chunk2_reduced_range_HeII.png
    section: Column Densities
    additional_arguments:
      element: helium
      species: HeII
      parallel: True
  - filename: scripts/cosmic_SNIa_rate.py
    title: 'Cosmic SNIa rate'
    caption: SNIa rate history plotted directly from the SNIa.txt file produced by SWIFT.
    section: SNIa Rate
    output_file: SNIa_rate_history.png
  - filename: scripts/dust_mass_evolution.py
    caption: Evolution of the dust mass density plotted directly from the statistics.txt file produced by SWIFT.
    output_file: dust_mass_evolution.png
    section: Dust Evolution
    title: Dust Mass Density Evolution
